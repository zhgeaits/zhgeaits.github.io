---
layout: post
title:  "记录一些自己对Java的理解，学习笔记，疑问与部分解答笔记!"
date:   2013-10-20 11:00:03
categories: java
type: java&web
---

**当年实习面试记录的一些关于java的问题**

* 继承与构造方法执行顺序：
首先执行父类的构造方法，再执行子类构造方法（但是先初始化属性再执行的）

* 子类中方法抛出的异常范围不能大于父类中方法抛出的异常的范围的原则，子类可以不抛出异常也满足该原则

* java的gc,什么时候回收？
  
看学习笔记

* servlet不是线程安全，jsp？

* java ldap，rmi，分布式对象

* 非mvc的开发

* 好像记熟快速排序那样记住堆排序

* JVM的通讯方式有哪些？
比如一个大项目，可能需要部署在多台机器上，在这些机器上的JVM如何进行通讯，如何传递讯息。 

我想的答案：

本质上jvm是进程，所以jvm的通信就是进程间的通信，进程通信有管道，信号量，socket，文件，共享内存等方式  
本地的话，就是两个进程就可以使用管道，信号和socket通信。  
多台机器的话，就是只能网络通信了，使用socket，或者java的远程方法调用RMI

* 比如我有一个数组数据，我如何快速找出，这个数据内有哪些数据，需要去除重复的数据。 

使用set数据结构，放进去可以检测是否已经存在

* 对于同一张表，如何使用Java并发访问这张表的数据？ 

使用信号量进行，就像文件的读写一样来控制

2	设计（实现方法）
2.1	设计方法：
a)	做设计如果只考虑到现在，就没有弹性，不具有可扩展性（多态），将来升级不好处理，要预想到将来的情况，可维护性
b)	用属性文件管理（需要知识：properties, Java解析xml, 反射机制）
c)	添加辅助类（把公用的代码封装起来，做成单例，放到缓存里面去。缓存相对读写硬盘来说，效率是很高的）
d)	降低耦合度（隐藏，封装）
e)	Over Design也是一种罪过，应该在有限的时间内设计最合适的最优的
f)	用到比较的时候，实现java.lang里面的Comparable的接口（用到泛型），写一个比较器，实现java.util里面的Comparator接口。策略模式就是定义一个策略比较器，然后由具体的比较策略来比较大小
g)	用到遍历的时候，实现Iterator接口（泛型）


思想是战略高度的东西（数据结构，算法）
工具是战术高度的东西（技术）
工具的学习：敢用，勤用

做东西，做设计，千万不要对自己要求太高，想要一次到位，太完美是不可能的，你要放开手去做你的设计，做完以后或者做了以后觉得不行再修改。

排序口诀：冒择路（插入）兮（希尔）快归堆

设计模式就是把简单的东西复杂化
学习模式，对于理解框架更好，而且做架构师必须的
